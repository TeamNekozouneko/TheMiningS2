#==================================================
#| #Profile.sk
#| プレイヤーデータの実装・管理モジュール
#|
#| Nekozouneko Group Developer
#==================================================

function profileInit(player: player, isOverwrite: boolean = false) :: boolean:
    set {_parameters::UUID} to {_player}'s uuid
    if {_isOverwrite} is false:
        set {_false} to true if {profile.money::%{_player}'s uuid%} is set
        set {_false} to true if {profile.exp::%{_player}'s uuid%} is set
        set {_false} to true if {profile.level::%{_player}'s uuid%} is set
    if {_false} is true:
        logError("ERR_PROFILE_INIT", {_parameters::*})
        return false
    set {profile.money::%{_player}'s uuid%} to 0
    set {profile.exp::%{_player}'s uuid%} to 0
    set {profile.level::%{_player}'s uuid%} to 1
    logInfo("PROFILE_INIT", {_parameters::*})
    return true

function profileJoinInit(player: player):
    set metadata value "isPortalTeleporting" of {_player} to false

#ItemIDが設定されていないアイテムは、不正なアイテムとして削除
function profileInventoryFixer(p: player):
    loop items in {_p}'s inventory:
        continue if getItemId(loop-item) is set
        remove loop-item from {_p}'s inventory
    loop items in {_p}'s ender chest:
        continue if getItemId(loop-item) is set
        remove loop-item from {_p}'s ender chest

#Getter
function profileMoneyGet(player: offline player) :: number:
    return floor({profile.money::%{_player}'s uuid%}*100)/100
function profileExpGet(player: offline player) :: number:
    return {profile.exp::%{_player}'s uuid%}
function profileLevelGet(player: offline player) :: number:
    return {profile.level::%{_player}'s uuid%}

#Increase
function profileMoneyIncrease(player: offline player, value: number, cause: string):
    set {_before} to profileMoneyGet({_player})
    add {_value} to {profile.money::%{_player}'s uuid%}
    set {_after} to profileMoneyGet({_player})
    logInfo("PROFILE_MONEY_INCREASE", getProfileLogParameters({_player}'s uuid, {_cause}, {_before}, {_after}))

    #クエスト SAVING_MONEY_500
    questTriggerIncreaseHandle({_player}, "SAVING_MONEY_500", {_value}) if {_player} is online
    #クエスト SAVING_MONEY_1000
    questTriggerIncreaseHandle({_player}, "SAVING_MONEY_1000", {_value}) if {_player} is online
    #クエスト SAVING_MONEY_5000
    questTriggerIncreaseHandle({_player}, "SAVING_MONEY_5000", {_value}) if {_player} is online
function profileExpIncrease(player: offline player, value: number, cause: string):
    add {_value} to {profile.exp::%{_player}'s uuid%}
function profileLevelIncrease(player: offline player, value: number, cause: string):
    set {_before} to profileLevelGet({_player})
    add {_value} to {profile.level::%{_player}'s uuid%}
    set {_after} to profileLevelGet({_player})
    logInfo("PROFILE_LEVEL_INCREASE", getProfileLogParameters({_player}'s uuid, {_cause}, {_before}, {_after}))

#Decrease
function profileMoneyDecrease(player: offline player, value: number, cause: string):
    set {_before} to profileMoneyGet({_player})
    remove {_value} from {profile.money::%{_player}'s uuid%}
    set {_after} to profileMoneyGet({_player})
    logInfo("PROFILE_MONEY_DECREASE", getProfileLogParameters({_player}'s uuid, {_cause}, {_before}, {_after}))
function profileExpDecrease(player: offline player, value: number, cause: string):
    remove {_value} from {profile.exp::%{_player}'s uuid%}
function profileLevelDecrease(player: offline player, value: number, cause: string):
    set {_before} to profileLevelGet({_player})
    remove {_value} from {profile.level::%{_player}'s uuid%}
    set {_after} to profileLevelGet({_player})
    logInfo("PROFILE_LEVEL_DECREASE", getProfileLogParameters({_player}'s uuid, {_cause}, {_before}, {_after}))

#Setter
function profileMoneySet(player: offline player, value: number, cause: string):
    set {_before} to profileMoneyGet({_player})
    set {profile.money::%{_player}'s uuid%} to {_value}
    set {_after} to profileMoneyGet({_player})
    logInfo("PROFILE_MONEY_SET", getProfileLogParameters({_player}'s uuid, {_cause}, {_before}, {_after}))
function profileExpSet(player: offline player, value: number, cause: string):
    set {profile.exp::%{_player}'s uuid%} to {_value}
function profileLevelSet(player: offline player, value: number, cause: string):
    set {_before} to profileLevelGet({_player})
    set {profile.level::%{_player}'s uuid%} to {_value}
    set {_after} to profileLevelGet({_player})
    logInfo("PROFILE_LEVEL_SET", getProfileLogParameters({_player}'s uuid, {_cause}, {_before}, {_after}))

#Interface
local function getProfileLogParameters(uuid: string, cause: string, before: number, after: number) :: objects:
    add {_uuid} to {_res::*}
    add {_cause} to {_res::*}
    add String({_before}) to {_res::*}
    add String({_after}) to {_res::*}
    return {_res::*}

#TabHandler
function profileTabListNameHandler():
    run 0 ticks later repeating every 3 second:
        loop all players:
            set {_name} to getDefine("LANG::TAB_LIST_NAME")
            set {_name} to substitution({_name}, String(profileLevelGet(loop-player)))
            set {_name} to substitution({_name}, String(loop-player))
            set loop-player's tab list name to {_name}

function profileStatisticsIncrease(p: player, statType: string, value: number):
    add {_value} to {profile.statistics::%{_p}'s uuid%::%{_statType}%}
function profileStatisticsDecrease(p: player, statType: string, value: number):
    remove {_value} from {profile.statistics::%{_p}'s uuid%::%{_statType}%}
function profileStatisticsSet(p: player, statType: string, value: number):
    set {profile.statistics::%{_p}'s uuid%::%{_statType}%} to {_value}
function profileStatisticsGet(p: player, statType: string) :: number:
    return 0 if {profile.statistics::%{_p}'s uuid%::%{_statType}%} is not set
    return {profile.statistics::%{_p}'s uuid%::%{_statType}%}
function profileStatisticsClear(p: player, statType: string) :: boolean:
    return false if {profile.statistics::%{_p}'s uuid%::%{_statType}%} is not set
    clear {profile.statistics::%{_p}'s uuid%::%{_statType}%}
    return true