#==================================================
#| #Enchantment.sk
#| エンチャント台の実装・管理モジュール
#|
#| Nekozouneko Group Developer
#==================================================

Options:
    MAIN_TITLE_NAME: "&6&lエンチャント"

    #ENCHANTMENT_MAIN
    MAIN_INFO_ICON: Glowing(beacon named "&aエンチャントのやり方" with lore "&7この下にピッケルを入れて、" and "&7付けたいエンチャントを押してね。" and "&f※必要分のラピスラズリを持ってる必要があるよ！")
    MAIN_BACKGROUND_ICON: gray stained glass pane named "&r"
    MAIN_CANNOT_ENCHANT_ICON: red stained glass pane named "&cこのアイテムはエンチャントできません！" with lore "&7付けたいエンチャントを押してね。"
    MAIN_CAN_ENCHANT_ICON: green stained glass pane named "&aエンチャントできるアイテムです！" with lore "&7付けたいエンチャントを押してね。"

function onRightClickEnchantmentHandle(p: player, b: block) :: boolean:
    set {_blockX} to floor(x location of {_b})
    set {_blockY} to floor(y location of {_b})
    set {_blockZ} to floor(z location of {_b})
    set {_isContain} to false
    loop getDefineList("ENCHANTMENT::TABLE_LOCATION"):
        set {_x} to floor(x location of loop-value)
        set {_y} to floor(y location of loop-value)
        set {_z} to floor(z location of loop-value)
        continue if {_x} is not {_blockX}
        continue if {_y} is not {_blockY}
        continue if {_z} is not {_blockZ}
        set {_isContain} to true
        exit loop
    return false if {_isContain} is false
    openGui({_p}, "ENCHANTMENT_MAIN")
    return true

#enum guiType {
# ENCHANTMENT_MAIN
#}
local function openGui(p: player, guiType: string):
    if {_guiType} is "ENCHANTMENT_MAIN":
        open chest inventory with 6 row named {@MAIN_TITLE_NAME} to {_p}
        loop 54 times:
            set slot (loop-number)-1 of {_p}'s current inventory to {@MAIN_BACKGROUND_ICON}
        set slot 4 of {_p}'s current inventory to {@MAIN_INFO_ICON}
        set slot 13 of {_p}'s current inventory to air #ピッケル投入口

        set {_types::*} to getDefineList("ENCHANTMENT_TYPES")
        set {_baseSlot} to 29
        loop 5 times:
            set slot {_baseSlot}+(loop-number)-1 of {_p}'s current inventory to air #エンチャントが表示されるところ

function onInventoryClickEnchantmentHandle(p: player, item: item) :: boolean:
    if name of {_p}'s current inventory is {@MAIN_TITLE_NAME}:
        {_item} is set
        getItemId({_item}) is not set
        return true
    return false

#レンダリング
function enchantmentGuiAsyncHandler():
    async run 0 ticks later repeating every 5 tick:
        loop all players where [name of input's current inventory is {@MAIN_TITLE_NAME}]:
            set {_item} to slot 13 of loop-player's current inventory
            set {_itemId} to getItemId({_item})
            set {_isEnchantable} to false
            set {_isEnchantable} to true if getDefineList("ENCHANTMENT::ENCHANTABLE_ITEMS") contains {_itemId}
            set {_booksInitialize} to false
            
            #ステータス描写
            set {_baseSlot} to 9
            loop 9 times:
                set {_slot} to {_baseSlot}+(loop-number)-1
                {_slot} is not 13 #ピッケル投入口のスロット除外

                if {_item} is air:
                    set slot {_slot} of loop-player's current inventory to {@MAIN_BACKGROUND_ICON}
                    set {_booksInitialize} to true
                else if {_isEnchantable} is false:
                    set slot {_slot} of loop-player's current inventory to {@MAIN_CANNOT_ENCHANT_ICON}
                    set {_booksInitialize} to true
                else:
                    set slot {_slot} of loop-player's current inventory to {@MAIN_CAN_ENCHANT_ICON}
        
            #エンチャント本部分の初期化
            if {_booksInitialize} is true:
                set {_baseSlot} to 29
                loop 5 times:
                    set {_slot} to {_baseSlot}+(loop-number)-1
                    slot {_slot} of loop-player's current inventory is not air
                    set slot {_slot} of loop-player's current inventory to air
            
            #エンチャント本描写
            continue if {_item} is air
            continue if {_isEnchantable} is false

            set {_currentExp} to profileExpGet(loop-player)
            set {_enchantments::*} to getDefineList("ENCHANTMENT_TYPES")
            set {_baseSlot} to 29
            loop (size of {_enchantments::*}) times:
                set {_enchantment} to {_enchantments::%loop-number%}
                set {_langEnchantment} to getDefine("LANG_ENCHANTMENTS::%{_enchantment}%")
                set {_currentEnchantmentLevel} to getItemEnchantmentLevel({_item}, {_enchantment})
                set {_initialTerm} to getDefine("ENCHANTMENT::INITIAL_TERM::%{_enchantment}%")
                set {_commonRatio} to getDefine("ENCHANTMENT::COMMON_RATIO::%{_enchantment}%")
                set {_currentCost} to getEqualRatio({_currentEnchantmentLevel}, {_initialTerm}, {_commonRatio})
                set {_slot} to {_baseSlot}+(loop-number)-1

                set {_isCostEnough} to false
                set {_isCostEnough} to true if {_currentCost} <= {_currentExp}

                clear {_lores::*}
                if {_isCostEnough} is true:
                    add "&aエンチャント可能" to {_lores::*}
                    set {_icon} to enchanted book
                else:
                    add "&cエンチャント不可能" to {_lores::*}
                    add "&7EXPが足りていません！" to {_lores::*}
                    set {_icon} to book

                add "&r" to {_lores::*}
                add "&f必要EXP&7: &b%{_currentCost}% EXP" to {_lores::*}
                set slot {_slot} of loop-player's current inventory to {_icon} named "&6%{_langEnchantment}% &eLv.%{_currentEnchantmentLevel}+1%" with lore {_lores::*}
                
local function getEqualRatio(n: number, initialTerm: number, commonRatio: number) :: number:
    return {_initialTerm} * {_commonRatio} ^ ({_n}-1)

function getItemEnchantmentLevel(itemData: item, enchantmentName: string) :: integer:
    set {_level} to int tag "TheMining;Enchantments;%{_enchantment}%" of custom nbt of {_itemData}
    return 0 if {_level} is not set
    return {_level}

function getItemEnchantments(itemData: item) :: objects:
    return compound list tag "TheMining;Enchantments" of custom nbt of {_itemData}